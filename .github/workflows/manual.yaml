name: Manual Build & Push

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'The platforms for which the Docker image should be built. If not specified, defaults to linux/amd64,linux/arm64/v8.'
        required: false
        default: 'linux/amd64,linux/arm64/v8'

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(inputs.platforms) }}  # Directly use the JSON array from the input
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create GitHub action tags from image tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tags = ['br-${{ github.ref_name }}', 'latest'];
            const username = '${{ github.repository_owner }}';
            const repoName = '${{ github.event.repository.name }}-develop';
            return tags.map((tag) => {
              return `ghcr.io/${username}/${repoName}:${tag}`;
            }).join(',');

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'
          tags: ${{ steps.tags.outputs.result }}

      - name: Export digest
        run: |
          mkdir -p $(dirname digest-${{ matrix.platform }}.txt)
          echo "${{ steps.build.outputs.digest }}" > digest-${{ matrix.platform }}.txt
        shell: bash

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: ${{ 'digest-' + matrix.platform.replace(/\//g, '_') }}
          path: digest-${{ matrix.platform }}.txt

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all digests
        uses: actions/download-artifact@v3
        with:
          path: .

      - name: Create multi-platform manifest
        run: |
          digests=$(ls digest-*.txt | xargs cat)
          docker buildx imagetools create --tag ${{ env.REGISTRY_IMAGE }} $digests
