name: Manual Build & Push

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Array of platforms for which the Docker image should be built.'
        required: false
        default: '[ "linux/amd64", "linux/arm64/v8" ]' # Default as JSON array

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(inputs.platforms) }}  # Build each platform in parallel
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Normalize platform name
        id: normalize-platform
        run: echo "PLATFORM_NAME=${{ matrix.platform//\//- }}" >> $GITHUB_ENV

      - name: Build and push for each platform
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-develop:${{ github.ref_name }}-${{ env.PLATFORM_NAME }}
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'

  create-manifest:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-develop:${{ github.ref_name }} \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-develop:${{ github.ref_name }}-linux-amd64 \
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-develop:${{ github.ref_name }}-linux-arm64-v8

          docker manifest push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-develop:${{ github.ref_name }}
